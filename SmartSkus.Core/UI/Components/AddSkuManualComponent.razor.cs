
using Blazorise.Localization;
using Microsoft.AspNetCore.Components;
using SmartSkus.Shared.Dtos;
using SmartSkus.Core.Local.Interface;
using SmartSkus.Core.Local.Models;
using SmartSkus.Core.Services.Contracts;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace SmartSkus.Core.UI.Components
{
    public partial class AddSkuManualComponent
    {
        #region Variables

        #region Parameter

        [Parameter]
        public AppModel AppModelObject { get; set; } = null!;

        [Parameter]
        public EventCallback<AppModel> AppModelObjectChanged { get; set; }

        [Parameter]
        public SettingsModel Settings { get; set; } = null!;

        [Parameter]
        public EventCallback<SettingsModel> SettingsChanged { get; set; }

        #endregion

        #region Inject

        [Inject]
        IRepository Repository { get; set; } = null!;

        [Inject]
        public IInventoryService InventoryService { get; set; }

        [Inject]
        ITextLocalizer<Translations> Localizer { get; set; } = null!;

        #endregion

        #region CascadingParameter

        [CascadingParameter]
        Blazorise.Size Size { get; set; }

        #endregion 

        #endregion

        async Task AddSkuModel()
        {
            if (await validations.ValidateAll())
            {
                SkuModelDto skuModelDto = new()
                {
                    // Id - Autogenerated

                    ItemName = AppModelObject.SkuModelDtoObject.ItemName,
                    Attribute1 = AppModelObject.SkuModelDtoObject.Attribute1,
                    Attribute2 = AppModelObject.SkuModelDtoObject.Attribute2,
                    Attribute3 = AppModelObject.SkuModelDtoObject.Attribute3

                    // GenerateSku - Derived Value
                };

                skuModelDto = await Repository.AddSkuModel(skuModelDto);

                // TODO:
                //AppModelObject.SkuModelDtoList.Add(skuModelDto);

                AppModelObject.SkuModelDtoObject = new();
                validations?.ClearAll();

                AppModelObject.SkuModelDtoList = (List<SkuModelDto>)await InventoryService.GetAll();

                AppModelObject.ItemDtoList = (List<ItemDto>)await InventoryService.GetAllItems();
                AppModelObject.ItemVariationDtoList
                    = (List<ItemVariationDto>)await InventoryService.GetAllItemVariations();

                AppModelObject.SelectedSkuModelDtoList = AppModelObject.SkuModelDtoList;
                AppModelObject.SelectedItemDtoList = AppModelObject.ItemDtoList;
                AppModelObject.SelectedItemVariationDtoList = AppModelObject.ItemVariationDtoList;

                await AppModelObjectChanged.InvokeAsync(AppModelObject);
            }
        }
    }
}
