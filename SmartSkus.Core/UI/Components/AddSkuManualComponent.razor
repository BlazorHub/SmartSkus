@using SmartSkus.Core.Local.Models;

<Validations @ref="validations" Mode="ValidationMode.Manual">
    <Validation Validator="ValidateSku">
        <Field Margin=Margin.Is0.Is2.FromTop>
            <FieldLabel Margin=Margin.Is0>@Localizer["Item Name"]:</FieldLabel>
            <TextEdit @bind-Text="@AppModelObject.SkuModelDtoObject.ItemName">
                <Feedback>
                    <ValidationError>Item Name should more than 2 characters.</ValidationError>
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>

    <Validation Validator="@ValidationRule.IsNotEmpty">
        <Field>
            <FieldLabel Margin=Margin.Is0>@Localizer["Description"]:</FieldLabel>
            <TextEdit @bind-Text="@AppModelObject.SkuModelDtoObject.Description">
                <Feedback>
                    <ValidationError>Description is Required</ValidationError>
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>

    <Validation Validator="@ValidationRule.IsNotEmpty">
        <Field>
            <FieldLabel Margin=Margin.Is0>@Localizer["Attribute1"]:</FieldLabel>
            <TextEdit @bind-Text="@AppModelObject.SkuModelDtoObject.Attribute1">
                <Feedback>
                    <ValidationError>Atleast one Attribute is Required</ValidationError>
                </Feedback>
            </TextEdit>
        </Field>
    </Validation>

    <Field>
        <FieldLabel Margin=Margin.Is0>@Localizer["Attribute2"]:</FieldLabel>
        <TextEdit @bind-Text="@AppModelObject.SkuModelDtoObject.Attribute2" />

        <FieldLabel Margin=Margin.Is0>@Localizer["Attribute3"]:</FieldLabel>
        <TextEdit @bind-Text="@AppModelObject.SkuModelDtoObject.Attribute3" />

        <Button Color=Color.Primary Size="Size" Block=true Margin=Margin.Is2.FromTop @onclick=AddSkuModel>
            @Localizer["Add Sku"]
        </Button>

    </Field>
</Validations>

@code {
    Validations? validations;

    void ValidateSku(ValidatorEventArgs e)
    {
        var sku = Convert.ToString(e.Value);
        if (sku.Length < 2)
        {
            e.Status = ValidationStatus.Error;
        }
        else
        {
            e.Status = ValidationStatus.Success;
        }
    }
}